#include <behaviors/num_word.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};
 */


#define TAPHOLD_TP(NAME, TAP, HOLD) \
         NAME: NAME { \
            compatible = "zmk,behavior-hold-tap"; \
            flavor = "tap-preferred"; \
            #binding-cells = <2>; \
            tapping-term-ms = <TAPPING_TERM>; \
            quick-tap-ms = <QUICK_TAP_TERM>; \
            require-prior-idle-ms = <QUICK_TAP_TERM>; \
            bindings = <HOLD>, <TAP>; \
        };

/ {
    symbols {
        TAPHOLD_TP(th_lpar,         &mac_de_ae, &de_s)
    };
};

&mt { flavor = "tap-preferred"; };

&sl { ignore-modifiers; };

/ {
    macros {
   shifted: macro_shifted_kp {
      #binding-cells = <1>;
      label = "MACRO_SHIFTED_KP";
      compatible = "zmk,behavior-macro-one-param";
      bindings =
        <&macro_press &kp LSHFT>,
        <&macro_param_1to1 &macro_tap &kp MACRO_PLACEHOLDER>,
        <&macro_release &kp LSHFT>;
    };



        mac_de_ae: de_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "DE_AE";
        };

        mac_de_oe: de_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "DE_OE";
        };

        mac_de_ue: de_ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "DE_UE";
        };

        de_s: de_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(S)>;
            label = "DE_S";
        };

        lw_de_ae: lw_de_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(Q)>;
            label = "LW_DE_AE";
        };

        lw_de_oe: lw_de_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(P)>;
            label = "LW_DE_OE";
        };

        lw_de_ue: lw_de_ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(Y)>;
            label = "LW_DE_UE";
        };

        mac_lock: mac_lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(Q))>;
            label = "MAC_LOCK";
        };

        lw_lock: lw_lock {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(L)>;
            label = "LW_LOCK";
        };

        mac_de_ae_capital: mac_de_ae_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp LS(A)>;
            label = "MAC_DE_AE_SHIFT";
        };
    };

    behaviors {
as: autoshift {
        compatible = "zmk,behavior-hold-tap";
        label = "ZM_autoshift";
        #binding-cells = <2>;
        tapping-term-ms = <180>;
        quick-tap-ms = <0>;
        flavor = "balanced";
        bindings = <&kp &kp>;
    };

        mac_deae: mac_deae_cool {
            compatible = "zmk,behavior-mod-morph";
            label = "MAC_DEAE";
            bindings = <&mac_de_ae>, <&mac_de_ae_capital>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&mt>, <&kp>;

            #binding-cells = <2>;
            retro-tap;
            tapping-term-ms = <100>;
        };

        lgui_r: lgui_r {
            compatible = "zmk,behavior-mod-morph";
            label = "LGUI_R";
            bindings = <&kp R>, <&kp LS(R)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
            keep-mods = <(MOD_LSFT)>;
        };

        coln_double: coln_double {
            compatible = "zmk,behavior-mod-morph";
            label = "COLN_DOUBLE";
            bindings = <&kp COLON>, <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RCTL)>;
        };
    };

    combos {
        compatible = "zmk,combos";
         combo_esc {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&th_lpar>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        mac {
            bindings = <
&kp TAB   &num_word 4  &kp P    &kp D        &kp L        &kp X                                                     &kp SEMI   &kp U          &kp O        &kp Y      &kp B       &kp Z
&kp BSPC  &kp S      &lt 2 N  &mt LSHFT T  &lt 4 H      &kp K                                                     &kp COMMA  &lt 5 A        &mt RSHFT E  &lt 2 I    &mt RALT C  &kp Q
&trans    &sl 8        &kp W    &kp G        &mt LCTRL M  &kp J  &none       &mo 7       &mac_lock  &none           &kp MINUS  &mt RCTRL DOT  &kp SQT      &kp EQUAL  &sl 8       &kp RET
                                &none        &none        &none  &mt LGUI R  &kp S  &none      &mt RGUI SPACE  &mo 6      &none          &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "Mac";
        };

        lw {
            bindings = <
&kp J      &kp Y        &kp Z    &kp U       &kp A        &kp Q                                              &kp P       &kp B        &kp M       &kp L       &kp F        &de_s
&kp TAB    &mt LCTRL C  &lt 3 S  &mt LGUI I  &mt LSHFT E  &kp O                                              &kp D       &mt RSHFT T  &mt RGUI N  &mt RALT R  &mt RCTRL H  &key_repeat
&kp LSHFT  &kp V        &kp X    &lw_de_ue   &lw_de_ae    &lw_de_oe    &none      &none  &none  &none        &kp W       &kp G        &kp COMMA   &kp DOT     &kp K        &kp RSHFT
                                 &none       &mo 7        &lt 4 SPACE  &lt 5 ESC  &none  &none  &lt 6 ENTER  &lt 2 BSPC  &mo 7        &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "Linux/Windows";
        };

        sym {
            bindings = <
&none   &kp AT           &kp PLUS        &kp LBKT       &kp RBKT        &kp PRCNT                                  &kp TILDE  &kp BSLH        &kp DQT        &kp STAR       &kp SQT          &none
&trans  &mt LCTRL MINUS  &mt LALT UNDER  &mt LGUI LPAR  &mt LSHFT RPAR  &kp AMPS                                   &kp PIPE   &mt RSHFT RBRC  &mt RGUI LBRC  &mt RALT FSLH  &mt RCTRL COLON  &trans
&trans  &kp CARET        &kp DLLR        &kp LT         &kp GT          &kp HASH   &trans  &trans  &trans  &trans  &kp GRAVE  &kp EQUAL       &kp QMARK      &kp EXCL       &kp SEMI         &trans
                                         &trans         &trans          &trans     &trans  &trans  &trans  &trans  &trans     &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "Sym";
        };

        layer_8 {
            bindings = <
&trans  &trans         &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp AMPERSAND  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                               &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        nav {
            bindings = <
&none   &none      &none     &none     &none      &none                                   &none     &kp PG_UP  &kp UP    &kp PG_DN  &none    &none
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none                                   &kp HOME  &kp LEFT   &kp DOWN  &kp RIGHT  &kp END  &trans
&trans  &none      &none     &none     &none      &none   &trans  &trans  &trans  &trans  &none     &none      &none     &none      &none    &trans
                             &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "Nav";
        };

        num {
            bindings = <
&none   &none      &none     &none     &none      &none                                   &kp KP_DIVIDE  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS      &kp KP_MULTIPLY
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none                                   &kp COLON      &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_SUBTRACT  &kp KP_EQUAL
&trans  &none      &none     &none     &none      &none   &trans  &trans  &trans  &trans  &kp COMMA      &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_DOT       &trans
                             &trans    &trans     &trans  &trans  &trans  &trans  &trans  &kp KP_N0      &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "Num";
        };

        fun {
            bindings = <
&bootloader  &none      &none     &none     &none      &none                                   &none   &kp F4  &kp F5  &kp F6  &kp F10  &none
&trans       &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &none                                   &none   &kp F1  &kp F2  &kp F3  &kp F11  &trans
&trans       &none      &none     &none     &none      &none   &trans  &trans  &trans  &trans  &none   &kp F7  &kp F8  &kp F9  &kp F12  &trans
                                  &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "Fun";
        };

        adjust {
            bindings = <
&none   &none  &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                                    &to 0   &none   &none   &none  &none  &none
&trans  &none  &none       &bt BT_SEL 3  &bt BT_SEL 4  &studio_unlock                                  &to 1   &none   &none   &none  &none  &trans
&trans  &none  &none       &none         &none         &none           &trans  &trans  &trans  &trans  &none   &none   &none   &none  &none  &trans
                           &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "Adjust";
        };

        mac_de {
            bindings = <
&trans  &trans  &trans     &trans  &trans  &trans                                  &trans  &mac_de_ue  &mac_de_oe  &trans  &trans  &trans
&trans  &de_s   &mac_deae  &trans  &trans  &trans                                  &trans  &mac_deae   &kp RSHFT   &trans  &trans  &trans
&trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans      &trans  &trans  &trans
                           &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans
            >;

            label = "Mac DE";
        };
    };
};
